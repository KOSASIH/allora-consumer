/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "./common";

export type OracleConstructorArgsStruct = {
  admin: AddressLike;
  protocolFeeReceiver: AddressLike;
};

export type OracleConstructorArgsStructOutput = [
  admin: string,
  protocolFeeReceiver: string
] & { admin: string; protocolFeeReceiver: string };

export type TopicConfigStruct = {
  title: string;
  owner: AddressLike;
  recentValueTime: BigNumberish;
  recentValue: BigNumberish;
  totalFee: BigNumberish;
  aggregator: AddressLike;
  ownerSwitchedOn: boolean;
  adminSwitchedOn: boolean;
  feeHandler: AddressLike;
  dataProviderQuorum: BigNumberish;
  dataValiditySeconds: BigNumberish;
};

export type TopicConfigStructOutput = [
  title: string,
  owner: string,
  recentValueTime: bigint,
  recentValue: bigint,
  totalFee: bigint,
  aggregator: string,
  ownerSwitchedOn: boolean,
  adminSwitchedOn: boolean,
  feeHandler: string,
  dataProviderQuorum: bigint,
  dataValiditySeconds: bigint
] & {
  title: string;
  owner: string;
  recentValueTime: bigint;
  recentValue: bigint;
  totalFee: bigint;
  aggregator: string;
  ownerSwitchedOn: boolean;
  adminSwitchedOn: boolean;
  feeHandler: string;
  dataProviderQuorum: bigint;
  dataValiditySeconds: bigint;
};

export type TopicViewStruct = {
  config: TopicConfigStruct;
  validDataProviders: AddressLike[];
};

export type TopicViewStructOutput = [
  config: TopicConfigStructOutput,
  validDataProviders: string[]
] & { config: TopicConfigStructOutput; validDataProviders: string[] };

export type NumericDataStruct = {
  topicId: BigNumberish;
  timestamp: BigNumberish;
  numericValue: BigNumberish;
  extraData: BytesLike;
};

export type NumericDataStructOutput = [
  topicId: bigint,
  timestamp: bigint,
  numericValue: bigint,
  extraData: string
] & {
  topicId: bigint;
  timestamp: bigint;
  numericValue: bigint;
  extraData: string;
};

export type SignedNumericDataStruct = {
  signature: BytesLike;
  numericData: NumericDataStruct;
};

export type SignedNumericDataStructOutput = [
  signature: string,
  numericData: NumericDataStructOutput
] & { signature: string; numericData: NumericDataStructOutput };

export type UpshotOracleNumericDataStruct = {
  signedNumericData: SignedNumericDataStruct[];
  extraData: BytesLike;
};

export type UpshotOracleNumericDataStructOutput = [
  signedNumericData: SignedNumericDataStructOutput[],
  extraData: string
] & { signedNumericData: SignedNumericDataStructOutput[]; extraData: string };

export interface OracleInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "acceptOwnership"
      | "addDataProvider"
      | "addTopic"
      | "adminSetProtocolFee"
      | "adminSetProtocolFeeReceiver"
      | "adminTurnOffOracle"
      | "adminTurnOffTopic"
      | "adminTurnOnOracle"
      | "adminTurnOnTopic"
      | "getMessage"
      | "getTopic"
      | "nextTopicId"
      | "owner"
      | "pendingOwner"
      | "protocolFee"
      | "protocolFeeReceiver"
      | "removeDataProvider"
      | "renounceOwnership"
      | "switchedOn"
      | "transferOwnership"
      | "turnOffTopic"
      | "turnOnTopic"
      | "updateAggregator"
      | "updateDataProviderQuorum"
      | "updateDataValiditySeconds"
      | "updateFeeHandler"
      | "updateTopicOwner"
      | "updateTotalFee"
      | "verifyData"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "OwnershipTransferStarted"
      | "OwnershipTransferred"
      | "UpshotOracleV2OracleAdminOracleTurnedOff"
      | "UpshotOracleV2OracleAdminOracleTurnedOn"
      | "UpshotOracleV2OracleAdminTopicTurnedOff"
      | "UpshotOracleV2OracleAdminTopicTurnedOn"
      | "UpshotOracleV2OracleAdminUpdatedProtocolFee"
      | "UpshotOracleV2OracleAdminUpdatedProtocolFeeReceiver"
      | "UpshotOracleV2OracleTopicOwnerAddedDataProvider"
      | "UpshotOracleV2OracleTopicOwnerRemovedDataProvider"
      | "UpshotOracleV2OracleTopicOwnerTopicTurnedOff"
      | "UpshotOracleV2OracleTopicOwnerTopicTurnedOn"
      | "UpshotOracleV2OracleTopicOwnerUpdatedAggregator"
      | "UpshotOracleV2OracleTopicOwnerUpdatedDataProviderQuorum"
      | "UpshotOracleV2OracleTopicOwnerUpdatedDataValiditySeconds"
      | "UpshotOracleV2OracleTopicOwnerUpdatedFee"
      | "UpshotOracleV2OracleTopicOwnerUpdatedFeeHandler"
      | "UpshotOracleV2OracleTopicOwnerUpdatedOwner"
      | "UpshotOracleV2OracleVerifiedData"
      | "UpshotOracleV2TopicAdded"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "acceptOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addDataProvider",
    values: [BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "addTopic",
    values: [TopicViewStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "adminSetProtocolFee",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "adminSetProtocolFeeReceiver",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "adminTurnOffOracle",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "adminTurnOffTopic",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "adminTurnOnOracle",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "adminTurnOnTopic",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getMessage",
    values: [NumericDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "getTopic",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "nextTopicId",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "pendingOwner",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "protocolFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "protocolFeeReceiver",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeDataProvider",
    values: [BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "switchedOn",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "turnOffTopic",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "turnOnTopic",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateAggregator",
    values: [BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "updateDataProviderQuorum",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateDataValiditySeconds",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateFeeHandler",
    values: [BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "updateTopicOwner",
    values: [BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "updateTotalFee",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "verifyData",
    values: [UpshotOracleNumericDataStruct]
  ): string;

  decodeFunctionResult(
    functionFragment: "acceptOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addDataProvider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addTopic", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "adminSetProtocolFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adminSetProtocolFeeReceiver",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adminTurnOffOracle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adminTurnOffTopic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adminTurnOnOracle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "adminTurnOnTopic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getMessage", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getTopic", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "nextTopicId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pendingOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "protocolFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "protocolFeeReceiver",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeDataProvider",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "switchedOn", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "turnOffTopic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "turnOnTopic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAggregator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateDataProviderQuorum",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateDataValiditySeconds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateFeeHandler",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateTopicOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateTotalFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "verifyData", data: BytesLike): Result;
}

export namespace OwnershipTransferStartedEvent {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferredEvent {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleAdminOracleTurnedOffEvent {
  export type InputTuple = [];
  export type OutputTuple = [];
  export interface OutputObject {}
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleAdminOracleTurnedOnEvent {
  export type InputTuple = [];
  export type OutputTuple = [];
  export interface OutputObject {}
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleAdminTopicTurnedOffEvent {
  export type InputTuple = [topicId: BigNumberish];
  export type OutputTuple = [topicId: bigint];
  export interface OutputObject {
    topicId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleAdminTopicTurnedOnEvent {
  export type InputTuple = [topicId: BigNumberish];
  export type OutputTuple = [topicId: bigint];
  export interface OutputObject {
    topicId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleAdminUpdatedProtocolFeeEvent {
  export type InputTuple = [newProtocolFee: BigNumberish];
  export type OutputTuple = [newProtocolFee: bigint];
  export interface OutputObject {
    newProtocolFee: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleAdminUpdatedProtocolFeeReceiverEvent {
  export type InputTuple = [protocolFeeReceiver: AddressLike];
  export type OutputTuple = [protocolFeeReceiver: string];
  export interface OutputObject {
    protocolFeeReceiver: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleTopicOwnerAddedDataProviderEvent {
  export type InputTuple = [topicId: BigNumberish, dataProvider: AddressLike];
  export type OutputTuple = [topicId: bigint, dataProvider: string];
  export interface OutputObject {
    topicId: bigint;
    dataProvider: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleTopicOwnerRemovedDataProviderEvent {
  export type InputTuple = [dataProvider: AddressLike];
  export type OutputTuple = [dataProvider: string];
  export interface OutputObject {
    dataProvider: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleTopicOwnerTopicTurnedOffEvent {
  export type InputTuple = [topicId: BigNumberish];
  export type OutputTuple = [topicId: bigint];
  export interface OutputObject {
    topicId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleTopicOwnerTopicTurnedOnEvent {
  export type InputTuple = [topicId: BigNumberish];
  export type OutputTuple = [topicId: bigint];
  export interface OutputObject {
    topicId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleTopicOwnerUpdatedAggregatorEvent {
  export type InputTuple = [topicId: BigNumberish, aggregator: AddressLike];
  export type OutputTuple = [topicId: bigint, aggregator: string];
  export interface OutputObject {
    topicId: bigint;
    aggregator: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleTopicOwnerUpdatedDataProviderQuorumEvent {
  export type InputTuple = [
    topicId: BigNumberish,
    dataProviderQuorum: BigNumberish
  ];
  export type OutputTuple = [topicId: bigint, dataProviderQuorum: bigint];
  export interface OutputObject {
    topicId: bigint;
    dataProviderQuorum: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleTopicOwnerUpdatedDataValiditySecondsEvent {
  export type InputTuple = [
    topicId: BigNumberish,
    dataValiditySeconds: BigNumberish
  ];
  export type OutputTuple = [topicId: bigint, dataValiditySeconds: bigint];
  export interface OutputObject {
    topicId: bigint;
    dataValiditySeconds: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleTopicOwnerUpdatedFeeEvent {
  export type InputTuple = [totalFee: BigNumberish];
  export type OutputTuple = [totalFee: bigint];
  export interface OutputObject {
    totalFee: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleTopicOwnerUpdatedFeeHandlerEvent {
  export type InputTuple = [topicId: BigNumberish, feeHandler: AddressLike];
  export type OutputTuple = [topicId: bigint, feeHandler: string];
  export interface OutputObject {
    topicId: bigint;
    feeHandler: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleTopicOwnerUpdatedOwnerEvent {
  export type InputTuple = [topicId: BigNumberish, newOwner: AddressLike];
  export type OutputTuple = [topicId: bigint, newOwner: string];
  export interface OutputObject {
    topicId: bigint;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2OracleVerifiedDataEvent {
  export type InputTuple = [
    topicId: BigNumberish,
    numericData: BigNumberish,
    dataProviders: AddressLike[]
  ];
  export type OutputTuple = [
    topicId: bigint,
    numericData: bigint,
    dataProviders: string[]
  ];
  export interface OutputObject {
    topicId: bigint;
    numericData: bigint;
    dataProviders: string[];
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpshotOracleV2TopicAddedEvent {
  export type InputTuple = [topicView: TopicViewStruct];
  export type OutputTuple = [topicView: TopicViewStructOutput];
  export interface OutputObject {
    topicView: TopicViewStructOutput;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface Oracle extends BaseContract {
  connect(runner?: ContractRunner | null): Oracle;
  waitForDeployment(): Promise<this>;

  interface: OracleInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  acceptOwnership: TypedContractMethod<[], [void], "nonpayable">;

  addDataProvider: TypedContractMethod<
    [topicId: BigNumberish, dataProvider: AddressLike],
    [void],
    "nonpayable"
  >;

  addTopic: TypedContractMethod<
    [topicView: TopicViewStruct],
    [bigint],
    "nonpayable"
  >;

  adminSetProtocolFee: TypedContractMethod<
    [protocolFee_: BigNumberish],
    [void],
    "nonpayable"
  >;

  adminSetProtocolFeeReceiver: TypedContractMethod<
    [protocolFeeReceiver_: AddressLike],
    [void],
    "nonpayable"
  >;

  adminTurnOffOracle: TypedContractMethod<[], [void], "nonpayable">;

  adminTurnOffTopic: TypedContractMethod<
    [topicId: BigNumberish],
    [void],
    "nonpayable"
  >;

  adminTurnOnOracle: TypedContractMethod<[], [void], "nonpayable">;

  adminTurnOnTopic: TypedContractMethod<
    [topicId: BigNumberish],
    [void],
    "nonpayable"
  >;

  getMessage: TypedContractMethod<
    [numericData: NumericDataStruct],
    [string],
    "view"
  >;

  getTopic: TypedContractMethod<
    [topicId: BigNumberish],
    [TopicViewStructOutput],
    "view"
  >;

  nextTopicId: TypedContractMethod<[], [bigint], "view">;

  owner: TypedContractMethod<[], [string], "view">;

  pendingOwner: TypedContractMethod<[], [string], "view">;

  protocolFee: TypedContractMethod<[], [bigint], "view">;

  protocolFeeReceiver: TypedContractMethod<[], [string], "view">;

  removeDataProvider: TypedContractMethod<
    [topicId: BigNumberish, dataProvider: AddressLike],
    [void],
    "nonpayable"
  >;

  renounceOwnership: TypedContractMethod<[], [void], "nonpayable">;

  switchedOn: TypedContractMethod<[], [boolean], "view">;

  transferOwnership: TypedContractMethod<
    [newOwner: AddressLike],
    [void],
    "nonpayable"
  >;

  turnOffTopic: TypedContractMethod<
    [topicId: BigNumberish],
    [void],
    "nonpayable"
  >;

  turnOnTopic: TypedContractMethod<
    [topicId: BigNumberish],
    [void],
    "nonpayable"
  >;

  updateAggregator: TypedContractMethod<
    [topicId: BigNumberish, aggregator: AddressLike],
    [void],
    "nonpayable"
  >;

  updateDataProviderQuorum: TypedContractMethod<
    [topicId: BigNumberish, dataProviderQuorum: BigNumberish],
    [void],
    "nonpayable"
  >;

  updateDataValiditySeconds: TypedContractMethod<
    [topicId: BigNumberish, dataValiditySeconds: BigNumberish],
    [void],
    "nonpayable"
  >;

  updateFeeHandler: TypedContractMethod<
    [topicId: BigNumberish, feeHandler: AddressLike],
    [void],
    "nonpayable"
  >;

  updateTopicOwner: TypedContractMethod<
    [topicId: BigNumberish, owner_: AddressLike],
    [void],
    "nonpayable"
  >;

  updateTotalFee: TypedContractMethod<
    [topicId: BigNumberish, totalFee: BigNumberish],
    [void],
    "nonpayable"
  >;

  verifyData: TypedContractMethod<
    [nd: UpshotOracleNumericDataStruct],
    [bigint],
    "payable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "acceptOwnership"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "addDataProvider"
  ): TypedContractMethod<
    [topicId: BigNumberish, dataProvider: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "addTopic"
  ): TypedContractMethod<[topicView: TopicViewStruct], [bigint], "nonpayable">;
  getFunction(
    nameOrSignature: "adminSetProtocolFee"
  ): TypedContractMethod<[protocolFee_: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "adminSetProtocolFeeReceiver"
  ): TypedContractMethod<
    [protocolFeeReceiver_: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "adminTurnOffOracle"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "adminTurnOffTopic"
  ): TypedContractMethod<[topicId: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "adminTurnOnOracle"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "adminTurnOnTopic"
  ): TypedContractMethod<[topicId: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "getMessage"
  ): TypedContractMethod<[numericData: NumericDataStruct], [string], "view">;
  getFunction(
    nameOrSignature: "getTopic"
  ): TypedContractMethod<
    [topicId: BigNumberish],
    [TopicViewStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "nextTopicId"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "owner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "pendingOwner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "protocolFee"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "protocolFeeReceiver"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "removeDataProvider"
  ): TypedContractMethod<
    [topicId: BigNumberish, dataProvider: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "renounceOwnership"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "switchedOn"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "transferOwnership"
  ): TypedContractMethod<[newOwner: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "turnOffTopic"
  ): TypedContractMethod<[topicId: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "turnOnTopic"
  ): TypedContractMethod<[topicId: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "updateAggregator"
  ): TypedContractMethod<
    [topicId: BigNumberish, aggregator: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateDataProviderQuorum"
  ): TypedContractMethod<
    [topicId: BigNumberish, dataProviderQuorum: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateDataValiditySeconds"
  ): TypedContractMethod<
    [topicId: BigNumberish, dataValiditySeconds: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateFeeHandler"
  ): TypedContractMethod<
    [topicId: BigNumberish, feeHandler: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateTopicOwner"
  ): TypedContractMethod<
    [topicId: BigNumberish, owner_: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateTotalFee"
  ): TypedContractMethod<
    [topicId: BigNumberish, totalFee: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "verifyData"
  ): TypedContractMethod<
    [nd: UpshotOracleNumericDataStruct],
    [bigint],
    "payable"
  >;

  getEvent(
    key: "OwnershipTransferStarted"
  ): TypedContractEvent<
    OwnershipTransferStartedEvent.InputTuple,
    OwnershipTransferStartedEvent.OutputTuple,
    OwnershipTransferStartedEvent.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred"
  ): TypedContractEvent<
    OwnershipTransferredEvent.InputTuple,
    OwnershipTransferredEvent.OutputTuple,
    OwnershipTransferredEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleAdminOracleTurnedOff"
  ): TypedContractEvent<
    UpshotOracleV2OracleAdminOracleTurnedOffEvent.InputTuple,
    UpshotOracleV2OracleAdminOracleTurnedOffEvent.OutputTuple,
    UpshotOracleV2OracleAdminOracleTurnedOffEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleAdminOracleTurnedOn"
  ): TypedContractEvent<
    UpshotOracleV2OracleAdminOracleTurnedOnEvent.InputTuple,
    UpshotOracleV2OracleAdminOracleTurnedOnEvent.OutputTuple,
    UpshotOracleV2OracleAdminOracleTurnedOnEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleAdminTopicTurnedOff"
  ): TypedContractEvent<
    UpshotOracleV2OracleAdminTopicTurnedOffEvent.InputTuple,
    UpshotOracleV2OracleAdminTopicTurnedOffEvent.OutputTuple,
    UpshotOracleV2OracleAdminTopicTurnedOffEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleAdminTopicTurnedOn"
  ): TypedContractEvent<
    UpshotOracleV2OracleAdminTopicTurnedOnEvent.InputTuple,
    UpshotOracleV2OracleAdminTopicTurnedOnEvent.OutputTuple,
    UpshotOracleV2OracleAdminTopicTurnedOnEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleAdminUpdatedProtocolFee"
  ): TypedContractEvent<
    UpshotOracleV2OracleAdminUpdatedProtocolFeeEvent.InputTuple,
    UpshotOracleV2OracleAdminUpdatedProtocolFeeEvent.OutputTuple,
    UpshotOracleV2OracleAdminUpdatedProtocolFeeEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleAdminUpdatedProtocolFeeReceiver"
  ): TypedContractEvent<
    UpshotOracleV2OracleAdminUpdatedProtocolFeeReceiverEvent.InputTuple,
    UpshotOracleV2OracleAdminUpdatedProtocolFeeReceiverEvent.OutputTuple,
    UpshotOracleV2OracleAdminUpdatedProtocolFeeReceiverEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleTopicOwnerAddedDataProvider"
  ): TypedContractEvent<
    UpshotOracleV2OracleTopicOwnerAddedDataProviderEvent.InputTuple,
    UpshotOracleV2OracleTopicOwnerAddedDataProviderEvent.OutputTuple,
    UpshotOracleV2OracleTopicOwnerAddedDataProviderEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleTopicOwnerRemovedDataProvider"
  ): TypedContractEvent<
    UpshotOracleV2OracleTopicOwnerRemovedDataProviderEvent.InputTuple,
    UpshotOracleV2OracleTopicOwnerRemovedDataProviderEvent.OutputTuple,
    UpshotOracleV2OracleTopicOwnerRemovedDataProviderEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleTopicOwnerTopicTurnedOff"
  ): TypedContractEvent<
    UpshotOracleV2OracleTopicOwnerTopicTurnedOffEvent.InputTuple,
    UpshotOracleV2OracleTopicOwnerTopicTurnedOffEvent.OutputTuple,
    UpshotOracleV2OracleTopicOwnerTopicTurnedOffEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleTopicOwnerTopicTurnedOn"
  ): TypedContractEvent<
    UpshotOracleV2OracleTopicOwnerTopicTurnedOnEvent.InputTuple,
    UpshotOracleV2OracleTopicOwnerTopicTurnedOnEvent.OutputTuple,
    UpshotOracleV2OracleTopicOwnerTopicTurnedOnEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleTopicOwnerUpdatedAggregator"
  ): TypedContractEvent<
    UpshotOracleV2OracleTopicOwnerUpdatedAggregatorEvent.InputTuple,
    UpshotOracleV2OracleTopicOwnerUpdatedAggregatorEvent.OutputTuple,
    UpshotOracleV2OracleTopicOwnerUpdatedAggregatorEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleTopicOwnerUpdatedDataProviderQuorum"
  ): TypedContractEvent<
    UpshotOracleV2OracleTopicOwnerUpdatedDataProviderQuorumEvent.InputTuple,
    UpshotOracleV2OracleTopicOwnerUpdatedDataProviderQuorumEvent.OutputTuple,
    UpshotOracleV2OracleTopicOwnerUpdatedDataProviderQuorumEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleTopicOwnerUpdatedDataValiditySeconds"
  ): TypedContractEvent<
    UpshotOracleV2OracleTopicOwnerUpdatedDataValiditySecondsEvent.InputTuple,
    UpshotOracleV2OracleTopicOwnerUpdatedDataValiditySecondsEvent.OutputTuple,
    UpshotOracleV2OracleTopicOwnerUpdatedDataValiditySecondsEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleTopicOwnerUpdatedFee"
  ): TypedContractEvent<
    UpshotOracleV2OracleTopicOwnerUpdatedFeeEvent.InputTuple,
    UpshotOracleV2OracleTopicOwnerUpdatedFeeEvent.OutputTuple,
    UpshotOracleV2OracleTopicOwnerUpdatedFeeEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleTopicOwnerUpdatedFeeHandler"
  ): TypedContractEvent<
    UpshotOracleV2OracleTopicOwnerUpdatedFeeHandlerEvent.InputTuple,
    UpshotOracleV2OracleTopicOwnerUpdatedFeeHandlerEvent.OutputTuple,
    UpshotOracleV2OracleTopicOwnerUpdatedFeeHandlerEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleTopicOwnerUpdatedOwner"
  ): TypedContractEvent<
    UpshotOracleV2OracleTopicOwnerUpdatedOwnerEvent.InputTuple,
    UpshotOracleV2OracleTopicOwnerUpdatedOwnerEvent.OutputTuple,
    UpshotOracleV2OracleTopicOwnerUpdatedOwnerEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2OracleVerifiedData"
  ): TypedContractEvent<
    UpshotOracleV2OracleVerifiedDataEvent.InputTuple,
    UpshotOracleV2OracleVerifiedDataEvent.OutputTuple,
    UpshotOracleV2OracleVerifiedDataEvent.OutputObject
  >;
  getEvent(
    key: "UpshotOracleV2TopicAdded"
  ): TypedContractEvent<
    UpshotOracleV2TopicAddedEvent.InputTuple,
    UpshotOracleV2TopicAddedEvent.OutputTuple,
    UpshotOracleV2TopicAddedEvent.OutputObject
  >;

  filters: {
    "OwnershipTransferStarted(address,address)": TypedContractEvent<
      OwnershipTransferStartedEvent.InputTuple,
      OwnershipTransferStartedEvent.OutputTuple,
      OwnershipTransferStartedEvent.OutputObject
    >;
    OwnershipTransferStarted: TypedContractEvent<
      OwnershipTransferStartedEvent.InputTuple,
      OwnershipTransferStartedEvent.OutputTuple,
      OwnershipTransferStartedEvent.OutputObject
    >;

    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;
    OwnershipTransferred: TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;

    "UpshotOracleV2OracleAdminOracleTurnedOff()": TypedContractEvent<
      UpshotOracleV2OracleAdminOracleTurnedOffEvent.InputTuple,
      UpshotOracleV2OracleAdminOracleTurnedOffEvent.OutputTuple,
      UpshotOracleV2OracleAdminOracleTurnedOffEvent.OutputObject
    >;
    UpshotOracleV2OracleAdminOracleTurnedOff: TypedContractEvent<
      UpshotOracleV2OracleAdminOracleTurnedOffEvent.InputTuple,
      UpshotOracleV2OracleAdminOracleTurnedOffEvent.OutputTuple,
      UpshotOracleV2OracleAdminOracleTurnedOffEvent.OutputObject
    >;

    "UpshotOracleV2OracleAdminOracleTurnedOn()": TypedContractEvent<
      UpshotOracleV2OracleAdminOracleTurnedOnEvent.InputTuple,
      UpshotOracleV2OracleAdminOracleTurnedOnEvent.OutputTuple,
      UpshotOracleV2OracleAdminOracleTurnedOnEvent.OutputObject
    >;
    UpshotOracleV2OracleAdminOracleTurnedOn: TypedContractEvent<
      UpshotOracleV2OracleAdminOracleTurnedOnEvent.InputTuple,
      UpshotOracleV2OracleAdminOracleTurnedOnEvent.OutputTuple,
      UpshotOracleV2OracleAdminOracleTurnedOnEvent.OutputObject
    >;

    "UpshotOracleV2OracleAdminTopicTurnedOff(uint256)": TypedContractEvent<
      UpshotOracleV2OracleAdminTopicTurnedOffEvent.InputTuple,
      UpshotOracleV2OracleAdminTopicTurnedOffEvent.OutputTuple,
      UpshotOracleV2OracleAdminTopicTurnedOffEvent.OutputObject
    >;
    UpshotOracleV2OracleAdminTopicTurnedOff: TypedContractEvent<
      UpshotOracleV2OracleAdminTopicTurnedOffEvent.InputTuple,
      UpshotOracleV2OracleAdminTopicTurnedOffEvent.OutputTuple,
      UpshotOracleV2OracleAdminTopicTurnedOffEvent.OutputObject
    >;

    "UpshotOracleV2OracleAdminTopicTurnedOn(uint256)": TypedContractEvent<
      UpshotOracleV2OracleAdminTopicTurnedOnEvent.InputTuple,
      UpshotOracleV2OracleAdminTopicTurnedOnEvent.OutputTuple,
      UpshotOracleV2OracleAdminTopicTurnedOnEvent.OutputObject
    >;
    UpshotOracleV2OracleAdminTopicTurnedOn: TypedContractEvent<
      UpshotOracleV2OracleAdminTopicTurnedOnEvent.InputTuple,
      UpshotOracleV2OracleAdminTopicTurnedOnEvent.OutputTuple,
      UpshotOracleV2OracleAdminTopicTurnedOnEvent.OutputObject
    >;

    "UpshotOracleV2OracleAdminUpdatedProtocolFee(uint256)": TypedContractEvent<
      UpshotOracleV2OracleAdminUpdatedProtocolFeeEvent.InputTuple,
      UpshotOracleV2OracleAdminUpdatedProtocolFeeEvent.OutputTuple,
      UpshotOracleV2OracleAdminUpdatedProtocolFeeEvent.OutputObject
    >;
    UpshotOracleV2OracleAdminUpdatedProtocolFee: TypedContractEvent<
      UpshotOracleV2OracleAdminUpdatedProtocolFeeEvent.InputTuple,
      UpshotOracleV2OracleAdminUpdatedProtocolFeeEvent.OutputTuple,
      UpshotOracleV2OracleAdminUpdatedProtocolFeeEvent.OutputObject
    >;

    "UpshotOracleV2OracleAdminUpdatedProtocolFeeReceiver(address)": TypedContractEvent<
      UpshotOracleV2OracleAdminUpdatedProtocolFeeReceiverEvent.InputTuple,
      UpshotOracleV2OracleAdminUpdatedProtocolFeeReceiverEvent.OutputTuple,
      UpshotOracleV2OracleAdminUpdatedProtocolFeeReceiverEvent.OutputObject
    >;
    UpshotOracleV2OracleAdminUpdatedProtocolFeeReceiver: TypedContractEvent<
      UpshotOracleV2OracleAdminUpdatedProtocolFeeReceiverEvent.InputTuple,
      UpshotOracleV2OracleAdminUpdatedProtocolFeeReceiverEvent.OutputTuple,
      UpshotOracleV2OracleAdminUpdatedProtocolFeeReceiverEvent.OutputObject
    >;

    "UpshotOracleV2OracleTopicOwnerAddedDataProvider(uint256,address)": TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerAddedDataProviderEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerAddedDataProviderEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerAddedDataProviderEvent.OutputObject
    >;
    UpshotOracleV2OracleTopicOwnerAddedDataProvider: TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerAddedDataProviderEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerAddedDataProviderEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerAddedDataProviderEvent.OutputObject
    >;

    "UpshotOracleV2OracleTopicOwnerRemovedDataProvider(address)": TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerRemovedDataProviderEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerRemovedDataProviderEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerRemovedDataProviderEvent.OutputObject
    >;
    UpshotOracleV2OracleTopicOwnerRemovedDataProvider: TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerRemovedDataProviderEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerRemovedDataProviderEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerRemovedDataProviderEvent.OutputObject
    >;

    "UpshotOracleV2OracleTopicOwnerTopicTurnedOff(uint256)": TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerTopicTurnedOffEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerTopicTurnedOffEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerTopicTurnedOffEvent.OutputObject
    >;
    UpshotOracleV2OracleTopicOwnerTopicTurnedOff: TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerTopicTurnedOffEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerTopicTurnedOffEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerTopicTurnedOffEvent.OutputObject
    >;

    "UpshotOracleV2OracleTopicOwnerTopicTurnedOn(uint256)": TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerTopicTurnedOnEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerTopicTurnedOnEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerTopicTurnedOnEvent.OutputObject
    >;
    UpshotOracleV2OracleTopicOwnerTopicTurnedOn: TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerTopicTurnedOnEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerTopicTurnedOnEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerTopicTurnedOnEvent.OutputObject
    >;

    "UpshotOracleV2OracleTopicOwnerUpdatedAggregator(uint256,address)": TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerUpdatedAggregatorEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedAggregatorEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedAggregatorEvent.OutputObject
    >;
    UpshotOracleV2OracleTopicOwnerUpdatedAggregator: TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerUpdatedAggregatorEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedAggregatorEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedAggregatorEvent.OutputObject
    >;

    "UpshotOracleV2OracleTopicOwnerUpdatedDataProviderQuorum(uint256,uint48)": TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerUpdatedDataProviderQuorumEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedDataProviderQuorumEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedDataProviderQuorumEvent.OutputObject
    >;
    UpshotOracleV2OracleTopicOwnerUpdatedDataProviderQuorum: TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerUpdatedDataProviderQuorumEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedDataProviderQuorumEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedDataProviderQuorumEvent.OutputObject
    >;

    "UpshotOracleV2OracleTopicOwnerUpdatedDataValiditySeconds(uint256,uint48)": TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerUpdatedDataValiditySecondsEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedDataValiditySecondsEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedDataValiditySecondsEvent.OutputObject
    >;
    UpshotOracleV2OracleTopicOwnerUpdatedDataValiditySeconds: TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerUpdatedDataValiditySecondsEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedDataValiditySecondsEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedDataValiditySecondsEvent.OutputObject
    >;

    "UpshotOracleV2OracleTopicOwnerUpdatedFee(uint128)": TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerUpdatedFeeEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedFeeEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedFeeEvent.OutputObject
    >;
    UpshotOracleV2OracleTopicOwnerUpdatedFee: TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerUpdatedFeeEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedFeeEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedFeeEvent.OutputObject
    >;

    "UpshotOracleV2OracleTopicOwnerUpdatedFeeHandler(uint256,address)": TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerUpdatedFeeHandlerEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedFeeHandlerEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedFeeHandlerEvent.OutputObject
    >;
    UpshotOracleV2OracleTopicOwnerUpdatedFeeHandler: TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerUpdatedFeeHandlerEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedFeeHandlerEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedFeeHandlerEvent.OutputObject
    >;

    "UpshotOracleV2OracleTopicOwnerUpdatedOwner(uint256,address)": TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerUpdatedOwnerEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedOwnerEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedOwnerEvent.OutputObject
    >;
    UpshotOracleV2OracleTopicOwnerUpdatedOwner: TypedContractEvent<
      UpshotOracleV2OracleTopicOwnerUpdatedOwnerEvent.InputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedOwnerEvent.OutputTuple,
      UpshotOracleV2OracleTopicOwnerUpdatedOwnerEvent.OutputObject
    >;

    "UpshotOracleV2OracleVerifiedData(uint256,uint256,address[])": TypedContractEvent<
      UpshotOracleV2OracleVerifiedDataEvent.InputTuple,
      UpshotOracleV2OracleVerifiedDataEvent.OutputTuple,
      UpshotOracleV2OracleVerifiedDataEvent.OutputObject
    >;
    UpshotOracleV2OracleVerifiedData: TypedContractEvent<
      UpshotOracleV2OracleVerifiedDataEvent.InputTuple,
      UpshotOracleV2OracleVerifiedDataEvent.OutputTuple,
      UpshotOracleV2OracleVerifiedDataEvent.OutputObject
    >;

    "UpshotOracleV2TopicAdded(tuple)": TypedContractEvent<
      UpshotOracleV2TopicAddedEvent.InputTuple,
      UpshotOracleV2TopicAddedEvent.OutputTuple,
      UpshotOracleV2TopicAddedEvent.OutputObject
    >;
    UpshotOracleV2TopicAdded: TypedContractEvent<
      UpshotOracleV2TopicAddedEvent.InputTuple,
      UpshotOracleV2TopicAddedEvent.OutputTuple,
      UpshotOracleV2TopicAddedEvent.OutputObject
    >;
  };
}
