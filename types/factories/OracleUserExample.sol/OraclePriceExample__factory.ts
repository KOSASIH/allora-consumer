/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  OraclePriceExample,
  OraclePriceExampleInterface,
} from "../../OracleUserExample.sol/OraclePriceExample";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "protocolFunctionArgument",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
              {
                components: [
                  {
                    internalType: "uint64",
                    name: "topicId",
                    type: "uint64",
                  },
                  {
                    internalType: "uint64",
                    name: "timestamp",
                    type: "uint64",
                  },
                  {
                    internalType: "uint256",
                    name: "numericValue",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes",
                    name: "extraData",
                    type: "bytes",
                  },
                ],
                internalType: "struct NumericData",
                name: "numericData",
                type: "tuple",
              },
            ],
            internalType: "struct SignedNumericData[]",
            name: "signedNumericData",
            type: "tuple[]",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct UpshotOracleNumericData",
        name: "upshotOracleData",
        type: "tuple",
      },
    ],
    name: "callProtocolFunctionWithUpshotOraclePrice",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IOracle",
        name: "upshotOracle_",
        type: "address",
      },
    ],
    name: "setUpshotOracleContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upshotOracle",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600280546001600160a01b03191673a610b62931659779ad06821ffefedc48af087c8817905534801561003657600080fd5b506100403361004e565b6100493361004e565b6100ba565b600180546001600160a01b03191690556100678161006a565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106be806100c96000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610108578063b506624714610126578063e30c397814610139578063f2fde38b1461015757600080fd5b8063047889541461008057806339f07f5b146100a2578063715018a6146100de57806379ba5097146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b3660046103f4565b610177565b005b3480156100ae57600080fd5b506002546100c2906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b3480156100ea57600080fd5b506100a06101a1565b3480156100ff57600080fd5b506100a06101b5565b34801561011457600080fd5b506000546001600160a01b03166100c2565b6100a0610134366004610418565b610234565b34801561014557600080fd5b506001546001600160a01b03166100c2565b34801561016357600080fd5b506100a06101723660046103f4565b6102b0565b61017f610321565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6101a9610321565b6101b3600061037b565b565b60015433906001600160a01b031681146102285760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b6102318161037b565b50565b600254604051630bae389760e11b81526000916001600160a01b03169063175c712e9034906102679086906004016104f9565b60206040518083038185885af1158015610285573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906102aa919061066f565b50505050565b6102b8610321565b600180546001600160a01b0383166001600160a01b031990911681179091556102e96000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6000546001600160a01b031633146101b35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161021f565b600180546001600160a01b031916905561023181600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461023157600080fd5b60006020828403121561040657600080fd5b8135610411816103df565b9392505050565b6000806040838503121561042b57600080fd5b82359150602083013567ffffffffffffffff81111561044957600080fd5b83016040818603121561045b57600080fd5b809150509250929050565b6000808335601e1984360301811261047d57600080fd5b830160208101925035905067ffffffffffffffff81111561049d57600080fd5b8036038213156104ac57600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b803567ffffffffffffffff811681146104f457600080fd5b919050565b6000602080835260608084018535601e1987360301811261051957600080fd5b8601803584820167ffffffffffffffff8083111561053657600080fd5b8260051b80360383131561054957600080fd5b60408a890181905295849052608095908a01860190868b01600036889003605e19015b87821015610636578d8503607f19018352863581811261058b57600080fd5b89018c810161059a8180610466565b91508688526105ac87890183836104b3565b91505085820135609e198336030181126105c557600080fd5b8281019250508d82018782038f890152886105df826104dc565b168252886105ee8885016104dc565b168f8301528d830135878301526106078d840182610466565b935090508c8e83015261061d8d830184836104b3565b998f019997505050928c0192506001919091019061056c565b505050610645898d018d610466565b99509750601f198b830301818c0152506106608189896104b3565b9b9a5050505050505050505050565b60006020828403121561068157600080fd5b505191905056fea2646970667358221220781b56f15f9d989cc3431071ff274c38a490cd2fe5f846994c6cdb4980c2322f64736f6c63430008150033";

type OraclePriceExampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OraclePriceExampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OraclePriceExample__factory extends ContractFactory {
  constructor(...args: OraclePriceExampleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OraclePriceExample & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OraclePriceExample__factory {
    return super.connect(runner) as OraclePriceExample__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OraclePriceExampleInterface {
    return new Interface(_abi) as OraclePriceExampleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OraclePriceExample {
    return new Contract(address, _abi, runner) as unknown as OraclePriceExample;
  }
}
